{"version":3,"file":"MovingLightNativeComponent.js","sourceRoot":"","sources":["../src/MovingLightNativeComponent.ts"],"names":[],"mappings":";;;;;;AAAA,qHAA6F;AAC7F,mHAA2F;AAkC9E,QAAA,QAAQ,GAAmB,IAAA,+BAAqB,EAAiB;IAC5E,iBAAiB,EAAE,CAAC,YAAY,CAAC;CAClC,CAAC,CAAC;AAEH,kBAAe,IAAA,gCAAsB,EAAmB,aAAa,CAAC,CAAC","sourcesContent":["import codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';\nimport codegenNativeCommands from 'react-native/Libraries/Utilities/codegenNativeCommands';\nimport type { ColorValue, HostComponent, ViewProps } from 'react-native';\n\nimport type {\n  DirectEventHandler,\n  Float,\n  Double,\n  Int32,\n  WithDefault,\n} from 'react-native/Libraries/Types/CodegenTypes';\n\nexport type SomethingEvent = {\n  value: string,\n  target: Int32,\n};\n\nexport interface MovingLightProps extends ViewProps {\n  // Props\n  size?: WithDefault<Float, 42>;\n  color?: ColorValue\n  eventParam?: string;\n  objectProp?: { number: Double, string: string};\n\n  // Events\n  onSomething?: DirectEventHandler<SomethingEvent>,\n}\n\n\ntype ComponentType = HostComponent<MovingLightProps>;\n\ninterface NativeCommands {\n  setLightOn: (viewRef: React.ElementRef<ComponentType>, value: boolean) => void;\n}\n\nexport const Commands: NativeCommands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: ['setLightOn'],\n});\n\nexport default codegenNativeComponent<MovingLightProps>('MovingLight');\n"]}